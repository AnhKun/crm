package vamk.uyen.crm.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import jakarta.transaction.Transactional;
import vamk.uyen.crm.entity.Role;
import vamk.uyen.crm.entity.User;
import vamk.uyen.crm.repository.RoleRepository;
import vamk.uyen.crm.repository.UserRepository;

@Service
@Transactional
public class UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private RoleRepository roleRepository; 

    public Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }

    public User getUserById(Integer userId) {
        return userRepository.findById(userId).orElse(null);
    }

    public User saveUser(User user) {
        // Ensure that the user has a valid role before saving
        if (user.getRole() == null || user.getRole().getId() == null) {
            // Assuming you have a default role or logic to determine the role
            Role defaultRole = roleRepository.findByName("DEFAULT_ROLE"); // Adjust based on your logic
            if (defaultRole == null) {
                // Create a default role if not found
                defaultRole = new Role("DEFAULT_ROLE");
                roleRepository.save(defaultRole);
            }
            user.setRole(defaultRole);
        }

        return userRepository.save(user);
    }

    public void deleteUser(Integer userId) {
        userRepository.deleteById(userId);
    }
}

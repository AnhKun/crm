import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import vamk.uyen.crm.entity.Role;
import vamk.uyen.crm.entity.User;
import vamk.uyen.crm.service.UserService;

import java.util.List;

@RestController
@RequestMapping("/api/users")
public class UserController {

    @Autowired
    private UserService userService;

    @GetMapping
    public List<User> getAllUsers() {
        return (List<User>) userService.getAllUsers();
    }

    @GetMapping("/{id}")
    public User getUserById(@PathVariable Integer id) {
        return userService.getUserById(id);
    }

    @PostMapping
    public ResponseEntity<String> addUser(@RequestBody User userRequest) {
        try {
            if (userRequest.getRole() == null || userRequest.getRole().getId() == null) {
                return ResponseEntity.badRequest().body("Role ID is required.");
            }

            Role role = userService.getRoleById(userRequest.getRole().getId());
           
            User newUser = new User();
            newUser.setEmail(userRequest.getEmail());
            newUser.setPassword(userRequest.getPassword());
            newUser.setFullname(userRequest.getFullname());
            newUser.setRole(role);

            userService.saveUser(newUser);

            return ResponseEntity.ok("User created successfully.");
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error creating user: " + e.getMessage());
        }
    }

    @PutMapping("/{id}")
    public User updateUser(@PathVariable Integer id, @RequestBody User user) {
        user.setId(id);
        return userService.saveUser(user);
    }

    @DeleteMapping("/{id}")
    public void deleteUser(@PathVariable Integer id) {
        userService.deleteUser(id);
    }
}
